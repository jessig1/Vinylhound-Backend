# Vinylhound Backend Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# DATABASE CONFIGURATION (Required)
# ============================================================================

# Full PostgreSQL connection URL
# Format: postgresql://username:password@host:port/database?sslmode=mode
# Default points at the dockerised Postgres exposed on port 54320
DATABASE_URL=postgresql://vinylhound:localpassword@localhost:54320/vinylhound?sslmode=disable

# Alternative: Individual database parameters (used by some services)
# When running the database via docker compose, the container exposes port 54320 to the host
DB_HOST=localhost
DB_PORT=54320
DB_USER=vinylhound
DB_PASSWORD=localpassword
DB_NAME=vinylhound
DB_SSLMODE=disable

# ============================================================================
# SECURITY (Required)
# ============================================================================

# Secret key for JWT/session token generation
# IMPORTANT: Use a strong random value in production
# Generate with: openssl rand -base64 32
JWT_SECRET=your-secret-key-change-this-in-production

# ============================================================================
# SERVER CONFIGURATION (Optional)
# ============================================================================

# Port for the API server to listen on
# Default: 8080
PORT=8080

# ============================================================================
# CORS CONFIGURATION (Optional)
# ============================================================================

# Single origin used by the lightweight API server
CORS_ALLOWED_ORIGIN=http://localhost:5173

# Comma-separated list of allowed origins for CORS
# Default: http://localhost:3000,http://localhost:5173,http://localhost:8080
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080

# Production example:
# CORS_ALLOWED_ORIGINS=https://app.vinylhound.com,https://www.vinylhound.com

# ============================================================================
# MICROSERVICES CONFIGURATION (If using microservices architecture)
# ============================================================================

# User Service
USER_SERVICE_URL=http://localhost:8001

# Catalog Service
CATALOG_SERVICE_URL=http://localhost:8002

# Rating Service
RATING_SERVICE_URL=http://localhost:8003

# Playlist Service
PLAYLIST_SERVICE_URL=http://localhost:8004

# ============================================================================
# LOGGING (Optional)
# ============================================================================

# Log level: debug, info, warn, error
# Default: info
LOG_LEVEL=info

# Log format: json, text
# Default: json
LOG_FORMAT=json

# ============================================================================
# PRODUCTION SETTINGS
# ============================================================================

# Environment: development, staging, production
# Default: development
ENV=development

# Enable debug mode (more verbose logging)
# Default: false
DEBUG=false

# ============================================================================
# NOTES
# ============================================================================

# 1. Never commit this file with real secrets to version control
# 2. Use strong, unique values for JWT_SECRET in production
# 3. For production, use environment-specific configuration management
#    (e.g., AWS Secrets Manager, HashiCorp Vault, Kubernetes Secrets)
# 4. Set sslmode=require for production databases
# 5. Regularly rotate secrets and credentials
